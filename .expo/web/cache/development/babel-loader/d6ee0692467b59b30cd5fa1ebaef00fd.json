{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Markets = function Markets() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getRepos = function _callee() {\n    var response, json;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://nova.bitcambio.com.br/api/v3/public/getmarkets'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.result);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getRepos();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(_ref, index) {\n        var id = _ref.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(Text, {\n          style: {\n            textAlign: 'center'\n          },\n          children: [\"Full name: \", item.MarketAssetLong, \", Abriviated: \", item.MarketAsset, \", Minimum trade size: \", item.MinTradeSize, '\\n', '\\n', '\\n']\n        });\n      }\n    })\n  });\n};\n\nexport default Markets;","map":{"version":3,"names":["React","useState","useEffect","Markets","data","setData","loading","setLoading","getRepos","fetch","response","json","result","console","error","index","id","item","textAlign","MarketAssetLong","MarketAsset","MinTradeSize"],"sources":["/Users/danielmints/Desktop/153a_App_Dev/financialCalculator/components/Markets.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Text, FlatList,TextInput, View} from 'react-native';\n\nconst Markets = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getRepos = async () => {\n        try {\n         const response = await fetch('https://nova.bitcambio.com.br/api/v3/public/getmarkets');\n         const json = await response.json();\n         //change here to get diffrent keys in the list\n         setData(json.result);\n       } catch (error) {\n         console.error(error);\n       } finally {\n         setLoading(false);\n       }\n     }\n\n    useEffect(() => {getRepos()}, []);\n\n    return (\n        <View>\n           <FlatList\n                data={data}\n                keyExtractor={({ id }, index) => id}\n                renderItem={({ item }) => (\n                    <Text style={{textAlign: 'center'}}>Full name: {item.MarketAssetLong}, Abriviated: {item.MarketAsset}, Minimum trade size: {item.MinTradeSize}{'\\n'}{'\\n'}{'\\n'}</Text>\n                )}\n            />\n        </View>\n    );\n}\n\nexport default Markets;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EAClB,gBAAwBF,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOG,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA8BJ,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOK,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,QAAQ,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEWC,KAAK,CAAC,wDAAD,CAFhB;;UAAA;YAENC,QAFM;YAAA;YAAA,iCAGOA,QAAQ,CAACC,IAAT,EAHP;;UAAA;YAGNA,IAHM;YAKZN,OAAO,CAACM,IAAI,CAACC,MAAN,CAAP;YALY;YAAA;;UAAA;YAAA;YAAA;YAOZC,OAAO,CAACC,KAAR;;UAPY;YAAA;YASZP,UAAU,CAAC,KAAD,CAAV;YATY;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAaAL,SAAS,CAAC,YAAM;IAACM,QAAQ;EAAG,CAAnB,EAAqB,EAArB,CAAT;EAEA,OACI,KAAC,IAAD;IAAA,UACG,KAAC,QAAD;MACK,IAAI,EAAEJ,IADX;MAEK,YAAY,EAAE,4BAASW,KAAT;QAAA,IAAGC,EAAH,QAAGA,EAAH;QAAA,OAAmBA,EAAnB;MAAA,CAFnB;MAGK,UAAU,EAAE;QAAA,IAAGC,IAAH,SAAGA,IAAH;QAAA,OACR,MAAC,IAAD;UAAM,KAAK,EAAE;YAACC,SAAS,EAAE;UAAZ,CAAb;UAAA,0BAAgDD,IAAI,CAACE,eAArD,oBAAoFF,IAAI,CAACG,WAAzF,4BAA4HH,IAAI,CAACI,YAAjI,EAA+I,IAA/I,EAAqJ,IAArJ,EAA2J,IAA3J;QAAA,EADQ;MAAA;IAHjB;EADH,EADJ;AAWH,CA9BD;;AAgCA,eAAelB,OAAf"},"metadata":{},"sourceType":"module"}