{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ValueContext = createContext(null);\n\nvar ValueProvider = function ValueProvider(_ref) {\n  var value = _ref.value,\n      tag = _ref.tag,\n      children = _ref.children;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentValue = _useState2[0],\n      setCurrentValue = _useState2[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function _callee() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(tag));\n\n          case 3:\n            jsonValue = _context.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setCurrentValue(data);\n            } else {\n              setCurrentValue(value);\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.dir(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var storeData = function _callee2(value) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            console.log('in storeData');\n            setCurrentValue(value);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(tag, JSON.stringify(value)));\n\n          case 5:\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.dir(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsx(ValueContext.Provider, {\n    value: {\n      currentValue: currentValue,\n      setCurrentValue: storeData\n    },\n    children: children\n  });\n};\n\nexport default ValueProvider;\nexport var useValue = function useValue() {\n  return useContext(ValueContext);\n};","map":{"version":3,"names":["React","useState","useEffect","useContext","createContext","AsyncStorage","ValueContext","ValueProvider","value","tag","children","currentValue","setCurrentValue","getData","getItem","jsonValue","data","JSON","parse","console","dir","storeData","log","setItem","stringify","useValue"],"sources":["/Users/danielmints/Desktop/153a_App_Dev/financialCalculator/components/ValueContext.js"],"sourcesContent":["/*\n  ValueStorageContext this adds async storage to valueContext\n*/\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst ValueContext = createContext(null)\n\nconst ValueProvider = ({value, tag, children}) => {\n  const [currentValue,setCurrentValue] = useState(value);\n\n  useEffect(() => {getData();},[]) // init currentValue with AsyncStorage\n\n  const getData = async () => \n    {\n      try {\n        const jsonValue = await AsyncStorage.getItem(tag)\n        let data = null\n        if (jsonValue!=null) {\n          data = JSON.parse(jsonValue);\n          setCurrentValue(data)\n        } else {\n          setCurrentValue(value)  \n        }\n      } catch(e) {\n        console.dir(e)\n      }\n  }\n  \n\n  const storeData = async (value) => {\n      try {\n        console.log('in storeData');\n        setCurrentValue(value);\n        await AsyncStorage.setItem(tag, JSON.stringify(value));\n      } catch (e) {\n        console.dir(e)\n      }\n  }\n\n\n  return (\n    <ValueContext.Provider\n        value={{currentValue,setCurrentValue:storeData}} >\n      {children}\n    </ValueContext.Provider>\n   )\n}\nexport default ValueProvider\nexport const useValue = () => useContext(ValueContext)"],"mappings":";;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,YAAY,GAAGF,aAAa,CAAC,IAAD,CAAlC;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAA4B;EAAA,IAA1BC,KAA0B,QAA1BA,KAA0B;EAAA,IAAnBC,GAAmB,QAAnBA,GAAmB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAChD,gBAAuCT,QAAQ,CAACO,KAAD,CAA/C;EAAA;EAAA,IAAOG,YAAP;EAAA,IAAoBC,eAApB;;EAEAV,SAAS,CAAC,YAAM;IAACW,OAAO;EAAI,CAAnB,EAAoB,EAApB,CAAT;;EAEA,IAAMA,OAAO,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAGcR,YAAY,CAACS,OAAb,CAAqBL,GAArB,CAHd;;UAAA;YAGJM,SAHI;YAINC,IAJM,GAIC,IAJD;;YAKV,IAAID,SAAS,IAAE,IAAf,EAAqB;cACnBC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAP;cACAH,eAAe,CAACI,IAAD,CAAf;YACD,CAHD,MAGO;cACLJ,eAAe,CAACJ,KAAD,CAAf;YACD;;YAVS;YAAA;;UAAA;YAAA;YAAA;YAYVW,OAAO,CAACC,GAAR;;UAZU;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAiBA,IAAMC,SAAS,GAAG,kBAAOb,KAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAEZW,OAAO,CAACG,GAAR,CAAY,cAAZ;YACAV,eAAe,CAACJ,KAAD,CAAf;YAHY;YAAA,iCAINH,YAAY,CAACkB,OAAb,CAAqBd,GAArB,EAA0BQ,IAAI,CAACO,SAAL,CAAehB,KAAf,CAA1B,CAJM;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAMZW,OAAO,CAACC,GAAR;;UANY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAWA,OACE,KAAC,YAAD,CAAc,QAAd;IACI,KAAK,EAAE;MAACT,YAAY,EAAZA,YAAD;MAAcC,eAAe,EAACS;IAA9B,CADX;IAAA,UAEGX;EAFH,EADF;AAMD,CAvCD;;AAwCA,eAAeH,aAAf;AACA,OAAO,IAAMkB,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAMtB,UAAU,CAACG,YAAD,CAAhB;AAAA,CAAjB"},"metadata":{},"sourceType":"module"}